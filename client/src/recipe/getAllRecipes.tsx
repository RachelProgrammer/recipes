
import { useForm } from "react-hook-form"
import { yupResolver } from "@hookform/resolvers/yup"
import * as yup from "yup"
// import { useDispatch, useSelector } from "react-redux"
import { useEffect } from "react"
import { useNavigate } from "react-router-dom"
import axios from 'axios'
import { useState } from "react"
import { type } from "@testing-library/user-event/dist/type"
import Button from 'react-bootstrap/Button';
import CategoriesPage from "../category/categoriesPage"
import "bootstrap/dist/css/bootstrap.min.css";
import { Card } from 'react-bootstrap';
import Header from "../components/header"
import { useStore } from "../store/storeContext"
import { Recipe } from "../services/DTOs"

const GetAllRecipes: React.FC = () => {
  const store = useStore();
  const isC = store.category;
  const recipes = store.recipe.recipes;
  const navig = useNavigate();
  const [time, setTime] = useState('')
  const [author, setAuthor] = useState<number>()
  const [difficulty, setDifficulty] = useState('')

  const nav = (recipe: Recipe) => {
    navig("/displayRecipe", { state: { activeRecipe: recipe } })
  }
  const edit = (id: string, name: string) => {
    // navig("/edit",{state:{id}})
    // dispach({type:'EDIT_RECIPE',})
  }
  const delet = (id: string, name: string) => {
    navig("/delete", { state: { id } })
  }


  return (

    <div className="container" style={{ maxWidth: "800px" }}>
      <div className="notpizaBackground" style={{ width: "100%" }}>
        <CategoriesPage />
        <div className="row mb-4">
          <div className="col-md-4">
            <input className="form-control" type="text" placeholder="Duration" onChange={(e) => setTime(e.target.value)}></input>
          </div>
          <div className="col-md-4 mr-2">
            <input className="form-control" type="number" placeholder="Difficulty" onChange={(e) => setDifficulty(e.target.value)}></input>
          </div>
          <div className="col-md-4">
            <input className="form-control" type="number" placeholder="Generated by" onChange={(e) => setAuthor(+e.target.value)}></input>
          </div>
        </div>

        <div className="row mt-4">
          {recipes?.map((recipe: Recipe) => (
            // (!isC || (isC.Id == recipe.CategoryId)) &&
            (!time || (time == recipe.Duration)) &&
            (!author || (author == recipe.UserId)) &&
            (!difficulty || (difficulty == recipe.Difficulty)) &&
            <div key={recipe.Id} className="col-md-4 mb-4">
              <Card>
                <Card.Img variant="top" src={recipe?.Img} style={{ height: "300px", width: "100%", objectFit: "cover" }} />
                <Card.Body>
                  <Card.Title>{recipe?.Name}</Card.Title>
                  <Button variant="outline-danger" onClick={() => nav(recipe)}>Details</Button>
                </Card.Body>
              </Card>
            </div>
          ))}
        </div>
      </div>
    </div>
  );

}
export default GetAllRecipes;
